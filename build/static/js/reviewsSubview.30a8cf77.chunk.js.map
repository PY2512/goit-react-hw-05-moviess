{"version":3,"file":"static/js/reviewsSubview.30a8cf77.chunk.js","mappings":"0RACA,GAAgB,KAAO,sBAAsB,KAAO,sBAAsB,WAAa,6B,SCgEvF,EAtDgB,SAAAA,GACZ,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAASK,EAAAA,EAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,mCAAG,gHAESC,EAAAA,EAAAA,IAAkBZ,GAF3B,mBAGM,KADfa,EAFS,EAETA,SACIC,OAHK,uBAIjBC,EAAAA,GAAAA,KAAW,6CACXN,EAAUF,EAAAA,EAAAA,UALO,0BAQjBH,EAAWS,GACXJ,EAAUF,EAAAA,EAAAA,UATO,kDAWjBD,EAAS,EAAD,IACRF,EAAW,IACXK,EAAUF,EAAAA,EAAAA,UAbO,0DAAH,qDAgBlBI,MACD,CAACX,KAGA,gCACCQ,IAAWD,EAAAA,EAAAA,UAAkB,SAACS,EAAA,EAAD,IAE7BR,IAAWD,EAAAA,EAAAA,UAAmBF,IAC3B,yDAGHG,IAAWD,EAAAA,EAAAA,WACR,+BACA,eAAIU,UAAWC,EAAAA,KAAf,SACKf,EAAQgB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACb,gBAAaL,UAAWC,EAAAA,KAAxB,WACI,cAAGD,UAAWC,EAAAA,WAAd,SAAiCG,KACjC,cAAGJ,UAAWC,EAAAA,QAAd,SAA8BI,MAFzBF","sources":["webpack://goit-react-hw-05-movies/./src/views/MoviesDetailsView/Reviews/Reviews.module.css?3a34","views/MoviesDetailsView/Reviews/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__f85FQ\",\"item\":\"Reviews_item__OloE3\",\"authorName\":\"Reviews_authorName__bDW0x\"};","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { fetchMovieReviews } from './../../../services/moviesApi';\r\nimport Status from './../../../services/Status';\r\n\r\nimport Loader from './../../../components/Loader/Loader';\r\nimport style from './Reviews.module.css';\r\n\r\nconst Reviews = movieID => {\r\n    const { movieId } = useParams();\r\n    const [reviews, setReviews] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [status, setStatus] = useState(Status.IDLE);\r\n\r\n    useEffect(() => {\r\n        const fetchReviews = async () => {\r\n        try {\r\n            const { results } = await fetchMovieReviews(movieId);\r\n            if (results.length === 0) {\r\n            toast.info(\"We don't have any reviews for this movie.\");\r\n            setStatus(Status.REJECTED);\r\n            return;\r\n            }\r\n            setReviews(results);\r\n            setStatus(Status.RESOLVED);\r\n        } catch (error) {\r\n            setError(error);\r\n            setReviews([]);\r\n            setStatus(Status.REJECTED);\r\n        }\r\n        };\r\n        fetchReviews();\r\n    }, [movieId]);\r\n\r\n    return (\r\n        <>\r\n        {status === Status.PENDING && <Loader />}\r\n\r\n        {status === Status.REJECTED && error && (\r\n            <p>Whoops, something went wrong </p>\r\n        )}\r\n\r\n        {status === Status.RESOLVED && (\r\n            <>\r\n            <ul className={style.list}>\r\n                {reviews.map(({ id, author, content }) => (\r\n                <li key={id} className={style.item}>\r\n                    <p className={style.authorName}>{author}</p>\r\n                    <p className={style.content}>{content}</p>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n            </>\r\n        )}\r\n        </>\r\n    );\r\n};\r\n\r\nReviews.propTypes = {\r\n    reviews: PropTypes.array,\r\n};\r\n\r\nexport default Reviews;"],"names":["movieID","movieId","useParams","useState","reviews","setReviews","error","setError","Status","status","setStatus","useEffect","fetchReviews","fetchMovieReviews","results","length","toast","Loader","className","style","map","id","author","content"],"sourceRoot":""}