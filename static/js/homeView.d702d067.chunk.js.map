{"version":3,"file":"static/js/homeView.d702d067.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Error/Error.module.css?141d","components/Error/Error.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesListItem/MoviesListItem.module.css?c6de","components/MoviesList/MoviesListItem/MoviesListItem.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","services/Status.jsx","services/moviesApi.jsx","webpack://goit-react-hw-05-movies/./src/views/HomeView/HomeView.module.css?053b","views/HomeView/HomeView.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Error_wrapper__Wc1dD\",\"message\":\"Error_message__Yybg9\"};","import PropTypes from 'prop-types';\r\nimport style from './Error.module.css';\r\n\r\nimport NotFoundPic from '../../images/not-found.jpg';\r\n\r\nfunction Error({ message }) {\r\n    return (\r\n        <div role=\"alert\" className={style.wrapper}>\r\n        <img\r\n            src={NotFoundPic}\r\n            width=\"650\"\r\n            alt=\"not found pic\"\r\n            className={style.img}\r\n        />\r\n        <p text={message} className={style.message}>\r\n            {message}\r\n        </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nError.propTypes = {\r\n    message: PropTypes.string,\r\n};\r\n\r\nexport default Error;","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"MoviesListItem_listItem__xJPuT\",\"poster\":\"MoviesListItem_poster__IvMQJ\",\"title\":\"MoviesListItem_title__n4mMR\"};","import { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport style from './MoviesListItem.module.css';\r\nimport noPosterImg from './../../../images/no-poster.jpg';\r\n\r\nconst MoviesListItem = ({\r\n    poster,\r\n    id,\r\n    title,\r\n    name,\r\n    releaseDate,\r\n    url,\r\n    location,\r\n    }) => (\r\n    <li className={style.listItem}>\r\n        <Link to={{ pathname: `${url}/${id}`, state: { from: location } }}>\r\n        <img\r\n            src={poster ? `https://image.tmdb.org/t/p/w500/${poster}` : noPosterImg}\r\n            alt={title || name}\r\n            className={style.poster}\r\n        />\r\n        <h2 className={style.title}>\r\n            {title || name}\r\n            {releaseDate && <span> ({releaseDate.slice(0, 4)})</span>}\r\n        </h2>\r\n        </Link>\r\n    </li>\r\n);\r\n\r\nMoviesListItem.propTypes = {\r\n    poster: PropTypes.string,\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string,\r\n};\r\n\r\nexport default MoviesListItem;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__NF6km\"};","import MoviesListItem from './MoviesListItem/MoviesListItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport style from './MoviesList.module.css';\r\n\r\nconst MoviesList = ({ movies, url, location }) => {\r\n    return (\r\n        <ul className={style.list}>\r\n        {movies.map(({ title, name, poster_path, id, release_date }) => (\r\n            <MoviesListItem\r\n            key={id}\r\n            title={title}\r\n            name={name}\r\n            releaseDate={release_date}\r\n            id={id}\r\n            poster={poster_path}\r\n            url={url}\r\n            location={location}\r\n            />\r\n        ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nMoviesList.propTypes = {\r\n    movies: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default MoviesList;","const Status = {\r\n    IDLE: 'idle',\r\n    PENDING: 'pending',\r\n    RESOLVED: 'resolved',\r\n    REJECTED: 'rejected',\r\n};\r\n\r\nexport default Status;","import axios from \"axios\";\r\n\r\nconst apiKey = '566ba5d0201ff094da11311999c70e6f';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\naxios.defaults.params = { api_key: apiKey };\r\n\r\nconst fetchTrendingMovies = async (page = 1) => {\r\n  const { data } = await axios.get(`/trending/all/day?page=${page}`);\r\n  return data;\r\n};\r\n\r\nconst fetchMovies = async (query, page = 1) => {\r\n  const { data } = await axios.get(\r\n    `/search/movie?language=en-US&page=${page}&include_adult=false&query=${query}`,\r\n  );\r\n  return data;\r\n};\r\n\r\nconst fetchMovieDetail = async movieID => {\r\n  try {\r\n    const response = await axios.get(`/movie/${movieID}`);\r\n    if (response.status === 200) {\r\n      console.log('result', response.status);\r\n      return response.data;\r\n    }\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst fetchMovieCredits = async movieId => {\r\n  const { data } = await axios.get(`/movie/${movieId}/credits`);\r\n  return data;\r\n};\r\n\r\nconst fetchMovieReviews = async movieId => {\r\n  const { data } = await axios.get(`/movie/${movieId}/reviews`);\r\n  return data;\r\n};\r\n\r\nexport {\r\n  fetchTrendingMovies,\r\n  fetchMovies,\r\n  fetchMovieDetail,\r\n  fetchMovieCredits,\r\n  fetchMovieReviews,\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"HomeView_title__3vm2A\",\"wrapper\":\"HomeView_wrapper__fwIOw\"};","import { useState, useEffect } from 'react';\r\n// import { useLocation } from 'react-router-dom';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport { Pagination } from '@mui/material';\r\n\r\nimport { fetchTrendingMovies } from './../../services/moviesApi';\r\nimport Status from './../../services/Status';\r\n\r\nimport MoviesList from './../../components/MoviesList/MoviesList';\r\nimport Loader from './../../components/Loader/Loader';\r\nimport Error from './../../components/Error/Error';\r\nimport style from './HomeView.module.css';\r\n\r\nfunction HomeView() {\r\n    const [movies, setMovies] = useState([]);\r\n    const [status, setStatus] = useState(Status.PENDING);\r\n    const [error, setError] = useState(null);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const page = new URLSearchParams(location.search).get('page') ?? 1;\r\n\r\n    useEffect(() => {\r\n        setStatus(Status.PENDING);\r\n        const fetchMovies = async () => {\r\n        try {\r\n            const { results, total_pages } = await fetchTrendingMovies(page);\r\n            setMovies(results);\r\n            setTotalPages(total_pages);\r\n            setStatus(Status.RESOLVED);\r\n        } catch (error) {\r\n            setError(error);\r\n            setStatus(Status.REJECTED);\r\n        }\r\n        };\r\n        fetchMovies();\r\n    }, [page]);\r\n\r\n    const pageHandler = (event, page) => {\r\n        history.push({ ...location, search: `page=${page}` });\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <h2 className={style.title}>Trending today</h2>\r\n        {status === Status.PENDING && <Loader />}\r\n        {status === Status.REJECTED && error && <Error message={error} />}\r\n        {status === Status.RESOLVED && (\r\n            <>\r\n            <MoviesList movies={movies} url={'movies'} location={'/'} />\r\n            {totalPages > 1 && (\r\n                <div className={style.wrapper}>\r\n                <Pagination\r\n                    count={totalPages}\r\n                    onChange={pageHandler}\r\n                    page={Number(page)}\r\n                    showFirstButton\r\n                    showLastButton\r\n                />\r\n                </div>\r\n            )}\r\n            </>\r\n        )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HomeView;"],"names":["message","role","className","style","src","NotFoundPic","width","alt","text","poster","id","title","name","releaseDate","url","location","to","pathname","state","from","noPosterImg","slice","movies","map","poster_path","release_date","IDLE","PENDING","RESOLVED","REJECTED","axios","api_key","fetchTrendingMovies","page","data","fetchMovies","query","fetchMovieDetail","movieID","response","status","console","log","fetchMovieCredits","movieId","fetchMovieReviews","useState","setMovies","Status","setStatus","error","setError","totalPages","setTotalPages","history","useHistory","useLocation","URLSearchParams","search","get","useEffect","results","total_pages","Loader","Error","MoviesList","Pagination","count","onChange","event","push","Number","showFirstButton","showLastButton"],"sourceRoot":""}